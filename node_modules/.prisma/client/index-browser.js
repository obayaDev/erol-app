
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 4.14.0
 * Query Engine version: d9a4c5988f480fa576d43970d5a23641aa77bc9c
 */
Prisma.prismaVersion = {
  client: "4.14.0",
  engine: "d9a4c5988f480fa576d43970d5a23641aa77bc9c"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val


/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.ActivitiesScalarFieldEnum = {
  id: 'id',
  date: 'date',
  name: 'name',
  fileDate: 'fileDate',
  filePath: 'filePath',
  assistence: 'assistence',
  branchesId: 'branchesId'
};

exports.Prisma.BranchesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  branch: 'branch',
  year_in: 'year_in',
  year_out: 'year_out',
  image_path: 'image_path'
};

exports.Prisma.ChildsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  second_name: 'second_name',
  third_name: 'third_name',
  year_birth: 'year_birth',
  absences: 'absences',
  still_in: 'still_in',
  branchesId: 'branchesId',
  familyId: 'familyId'
};

exports.Prisma.FamilyScalarFieldEnum = {
  id: 'id',
  branchesId: 'branchesId'
};

exports.Prisma.FilesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  text: 'text',
  max_update_date: 'max_update_date',
  file_path: 'file_path',
  branchesId: 'branchesId',
  global: 'global',
  userId: 'userId'
};

exports.Prisma.Forms_sleepScalarFieldEnum = {
  id: 'id',
  name: 'name',
  capsQuatitiy: 'capsQuatitiy',
  childQuatitiy: 'childQuatitiy',
  comments: 'comments',
  confirmed: 'confirmed',
  dateIn: 'dateIn',
  dateOut: 'dateOut',
  email: 'email',
  firstName: 'firstName',
  group: 'group',
  phone: 'phone',
  userId: 'userId'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NewsScalarFieldEnum = {
  id: 'id',
  title: 'title',
  text: 'text',
  image_path: 'image_path',
  global: 'global',
  userId: 'userId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  createdAt: 'createdAt',
  firstName: 'firstName',
  password: 'password',
  phone: 'phone',
  role: 'role',
  updatedAt: 'updatedAt',
  branchesId: 'branchesId',
  familyId: 'familyId'
};


exports.Prisma.ModelName = {
  branches: 'branches',
  childs: 'childs',
  family: 'family',
  activities: 'activities',
  files: 'files',
  forms_sleep: 'forms_sleep',
  news: 'news',
  User: 'User'
};

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
